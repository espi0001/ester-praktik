---
const { header } = Astro.props;

import { Icon } from "astro-icon/components";
---

<div id="overlay"></div>
<article class="hero" id="herotitle">
  <h1>{header}</h1>
  <h6>Fronted developer</h6>
  <a href="#info" class="listen-link"> <Icon name="arrow-down" /></a>
</article>

<style>
  @layer components {
    #overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: var(--sort);
      z-index: 9999;
    }
    .hero {
      /* background-size: cover;
      aspect-ratio: 16 / 9; */
      height: 100vh;
      grid-column: content;
      text-align: center;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;

      @media (width < 480px) {
        height: 30vh;
      }
    }

    .navigation {
      z-index: 1;
    }

    .listen-link {
      /* padding-top: 5%; */
      /* margin: auto; */
      display: flex;
      justify-content: center;
      animation: bounce_kf 2s infinite;
      svg {
        align-self: center;
        width: 50px;
        color: var(--sort);
      }
    }

    @keyframes bounce_kf {
      0%,
      20%,
      50%,
      80%,
      100% {
        translate: 0;
      }
      40% {
        translate: 0 -25px;
      }
      60% {
        translate: 0 -15px;
      }
    }
  }
</style>
<script>
  import Splitting from "splitting";
  import "splitting/dist/splitting.css"; // Importer Splitting.js CSS
  import gsap from "gsap";
  document.addEventListener("DOMContentLoaded", () => {
    const overlay = document.getElementById("overlay");
    const herotitle = document.getElementById("herotitle").querySelector("h1");
    const heroSubtitle = document.getElementById("herotitle").querySelector("h6");

    if (herotitle && heroSubtitle) {
      const titleResult = Splitting({ target: herotitle, by: "chars" });
      const subtitleResult = Splitting({ target: heroSubtitle, by: "chars" });

      const titleChars = titleResult[0].chars;
      const subtitleChars = subtitleResult[0].chars;

      const tl = gsap.timeline();

      // Animate overlay
      tl.to(overlay, {
        duration: 1,
        scaleY: 0,
        transformOrigin: "top",
        ease: "power2.inOut",
      });

      // Animate h1 (title)
      tl.from(
        titleChars,
        {
          opacity: 0,
          y: 80,
          rotateX: -90,
          stagger: 0.05,
          duration: 1,
          ease: "back.out(1.7)",
        },
        "-=0.5"
      );

      // Animate h6 (subtitle)
      tl.from(
        subtitleChars,
        {
          opacity: 0,
          y: 50,
          rotateX: -90,
          stagger: 0.03,
          duration: 0.8,
          ease: "back.out(1.7)",
        },
        "-=0.3"
      );
    }
  });
</script>
